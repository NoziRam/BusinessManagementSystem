// <auto-generated />
using System;
using BusinessManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessManagementSystem.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    [Migration("20240225160646_FirtsItinial")]
    partial class FirtsItinial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessManagementSystem.Models.FinancialTransaction.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Building")
                        .HasColumnType("float");

                    b.Property<double>("Capital")
                        .HasColumnType("float");

                    b.Property<double>("CassacashRegister")
                        .HasColumnType("float");

                    b.Property<double>("CurrentAssets")
                        .HasColumnType("float");

                    b.Property<DateOnly>("DateTime")
                        .HasColumnType("date");

                    b.Property<double>("Debtors")
                        .HasColumnType("float");

                    b.Property<double>("Equipment")
                        .HasColumnType("float");

                    b.Property<double>("FixedAssets")
                        .HasColumnType("float");

                    b.Property<double>("GoodsOnTheWay")
                        .HasColumnType("float");

                    b.Property<double>("Liabilitiies")
                        .HasColumnType("float");

                    b.Property<double>("LongTermLiabilitiies")
                        .HasColumnType("float");

                    b.Property<double>("SavingMoney")
                        .HasColumnType("float");

                    b.Property<double>("ShortTermLiabilitiies")
                        .HasColumnType("float");

                    b.Property<double>("StockProducts")
                        .HasColumnType("float");

                    b.Property<double>("Transport")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.FinancialTransaction.CashFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<double>("Marketing")
                        .HasColumnType("float");

                    b.Property<double>("NetProfit")
                        .HasColumnType("float");

                    b.Property<double>("OperatingExpenses")
                        .HasColumnType("float");

                    b.Property<double>("OtherOperatingCosts")
                        .HasColumnType("float");

                    b.Property<double>("Purchase")
                        .HasColumnType("float");

                    b.Property<double>("RentalCosts")
                        .HasColumnType("float");

                    b.Property<double>("SalaryForEmployees")
                        .HasColumnType("float");

                    b.Property<double>("Sale")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("TotalCosts")
                        .HasColumnType("float");

                    b.Property<double>("TotalExpenses")
                        .HasColumnType("float");

                    b.Property<double>("TransportationCosts")
                        .HasColumnType("float");

                    b.Property<double>("UtilityExpenses")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.FinancialTransaction.FinancialIndicators", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AccountsReceivableTurnover")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<double>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<double>("InventoryTurnover")
                        .HasColumnType("float");

                    b.Property<double>("Leverage")
                        .HasColumnType("float");

                    b.Property<double>("Liquidity")
                        .HasColumnType("float");

                    b.Property<double>("NetProfit")
                        .HasColumnType("float");

                    b.Property<double>("Profitability")
                        .HasColumnType("float");

                    b.Property<double>("Revenue")
                        .HasColumnType("float");

                    b.Property<double>("Rotation")
                        .HasColumnType("float");

                    b.Property<double>("TotalExpenses")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FinancialIndicators");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Product.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Users.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Functionality")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Users.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Functionality")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Users.Worker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Functionality")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Product.Product", b =>
                {
                    b.HasOne("BusinessManagementSystem.Models.Product.Category", "Category")
                        .WithMany("ProductCategory")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessManagementSystem.Models.Product.Category", b =>
                {
                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
